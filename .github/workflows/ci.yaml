name: CI

on:
  push:
    branches:
      - master
      - docker
    tags:
      - 'v**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  install:
    runs-on: ubuntu-24.04
    outputs:
      pkgman: pnpm
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.11.x
          cache: pnpm

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: pnpm-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install --frozen-lockfile

  lint:
    needs: [install]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.11.x
          cache: ${{ needs.install.outputs.pkgman }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install.outputs.pkgman }}-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: ${{ needs.install.outputs.pkgman }} run lint

  build:
    needs: [install]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.11.x
          cache: ${{ needs.install.outputs.pkgman }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install.outputs.pkgman }}-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: ${{ needs.install.outputs.pkgman }} build

      - run: tar -cv dist/ package.json pnpm-lock.yaml | gzip -v -9 > dist-${{ github.sha }}.tar.gz

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist-${{ github.sha }}.tar.gz

  docker:
    runs-on: ubuntu-24.04
    env:
      push: ${{ github.event != 'pull_request' }}
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: ${{ env.push }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          sbom: true
          push: ${{ env.push }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max

  test:
    needs: [install]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.11.x
          cache: ${{ needs.install.outputs.pkgman }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.install.outputs.pkgman }}-v1-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - run: ${{ needs.install.outputs.pkgman }} run test
