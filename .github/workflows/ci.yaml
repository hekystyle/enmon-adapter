name: CI

on:
  push:
    branches:
      - master
      - deploy
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  install:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install --immutable

  lint:
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn run lint

  build:
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn build

  build_docker:
    if: ${{ false }}
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          load: true
          tags: ghcr.io/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export Docker image
        run: docker image save -o image.tar ghcr.io/${{ github.repository }}

      - name: Cache docker image
        uses: actions/cache@v3
        with:
          path: image.tar
          key: image-${{ github.sha }}

  test:
    needs: [install, build, lint]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn run test

      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          verbose: true

  deploy:
    needs: [install, lint, build, test]
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'push' && ( github.ref_name == 'deploy' || github.ref_name == 'master' ) }}
    environment: production
    env:
      SHA: ${{ github.sha }}
    steps:
      - uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: SHA
          command_timeout: 20m
          script: |
            cd /opt/enmon-middleman
            git status
            git fetch --all
            git status
            git checkout $SHA
            git status
            echo "Stopping service"
            systemctl --user stop enmon-middleman
            echo "Installing dependencies"
            yarn install --immutable
            echo "Building"
            yarn build
            echo "Restarting service"
            systemctl --user restart enmon-middleman
